type Query {
  int: Int
  float: Float
  boolean: Boolean
  string: String
  map: Map
  scalarArray: [String]
  mapArray: [Map]
  withArgs ( 
    int: Int
    float: Float
    boolean: Boolean
    string: String
    enum: Enumerable
    inputMap: InputMap
  ): String
}

scalar Kek

input InputMap {
  int: Int
  inputMap: InputMap
  inputListScalar: [Int]
  inputListMap: [InputMap]
}

type Mutation {
  noArgs: String
}

type Subscription {
  noArgs: String
}

type Map {
  id: ID
  map: Map
  maps: [Map]
}

enum Enumerable {
  FIRST
  SECOND
  THIRD
}